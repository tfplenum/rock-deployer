{% if 'atomic' in kick_media %}
lang en_US.UTF-8
keyboard ustimezone America/Chicago
#rootpw --iscrypted password_hash
rootpw --plaintext atomic
auth --enableshadow --passalgo=sha512
ostreesetup --nogpg --osname=rhel-atomic-host --remote=rhel-atmoic-host --url=file:///install/ostree --ref=rhel-atomic-host/7/x86_64/standard
services --disabled cloud-init,cloud-config,cloud-final,cloud-init-local
clearpart --all --initlabel
zerombr
autopart
#%include /usr/share/anaconda/interactive-defaults.ks
%post --erroronfail
fn=/etc/ostree/remotes.d/rhel-atomic-host.conf; if test -f ${fn} && grep -q -e '^url=file:///install/ostree' ${fn}$; then rm ${fn}; fi
%end
%post --erroronfail
rm -f /etc/ostree/remotes.d/*.conf
echo 'unconfigured-state=This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.' >> $(ostree admin --print-current-dir).origin
%end
{% else %}
#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use CDROM installation media
url --url http://{{ kick_srvr }}/{{ kick_media }}
# Use graphical install
text
#graphical
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use={% if item is defined %}{{ hostvars[item].boot_drive }}{% else %}{{ default_boot_drive }}{% endif %}
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
# Disable Firewalld
firewall --disabled
# Disable SELinux
selinux --disabled
eula --agreed

#Reboot when its all over
reboot

# Network information
{% if item is defined %}
network --bootproto=static --ip={{ hostvars[item].ip }} --netmask={{ netmask }} --gateway={{ gateway }} --nameserver={{ dns }} --noipv6 --activate
network  --hostname={{ item }}
{% else %}
network  --bootproto=dhcp --device=eth0 --noipv6 --activate
network  --hostname=localhost.localdomain
{% endif %}


# Root password
rootpw --iscrypted {{ rootpw.stdout }}
# System services
services --disabled="chronyd"
# System timezone
timezone {{ timezone }} --isUtc --nontp
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive={% if item is defined %}{{ hostvars[item].boot_drive }}{% else %}{{ default_boot_drive }}{% endif %}

# Partition clearing information
zerombr
clearpart --all --initlabel
part /boot --fstype="xfs" --size=500
part pv.01 --size=1 --grow
volgroup vg01 pv.01
logvol /  --fstype="xfs" --size=1 --name=root --vgname=vg01 --grow

%packages
@^minimal
@core
kexec-tools
vim
wget
bash-completion


%end

%post
/usr/sbin/grubby --update-kernel=ALL --args=console=ttyS0

%end
{% endif %}